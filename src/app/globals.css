@tailwind base;
@tailwind components;
@tailwind utilities;
@import "rsuite/dist/rsuite.css";

body {
  box-sizing: border-box;
  font-size: 16px;
  --swiper-navigation-color: transparent;
  --swiper-pagination-color: transparent;
  --grey200: #eeee;
  --grey600: #666666;
  --stone550: #808080;
  --stone650: #888;
  --stone750: #373737;
  --stone890: #2f2f2f;
  --stone850: #262626;
  --stone950: #232323;
  --black: #000;
  --indigo950: #0f0a21;
  --b800: #171615;
  --green750: #0a9600;
  --orange50: #ffdc97;
  --orange100: #ffbd3e;
  --orange150: #ffbe41;
  --orange200: #fcbf49;
  --orange250: #ffa800;
  --orange400: #ff9000;
  --orange500: #ff7d34;
  --orange600: #fc6a00;
}

@layer utilities {
  details > summary::marker {
    display: none !important;
  }

  summary::-webkit-details-marker {
    /* Hides marker on Safari */
    display: none;
  }

  summary {
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    padding-right: 15px;
    align-items: center;
    transition: 1s transform ease;
  }

  @keyframes openDetails {
    0% {
      height: 0;
      opacity: 0;
    }
    100% {
      height: fit-content;
      opacity: 1;
    }
  }

  details[open] > p {
    animation: openDetails 0.5s ease forwards;
  }

  details > summary::after {
    content: url("/arrow-faq.svg");
    position: relative;
    display: inline-block;
    width: 12px;
    height: 14px;
    transition: 0.3s transform ease;
    transform: rotate(-90deg);
  }

  details[open] > summary::after {
    align-items: end;
    width: 12px;
    height: 10px;
    bottom: -10px;
    transform: rotate(-180deg);
    transition: 0.3s transform ease;
  }
}

li:nth-child(5n)::marker {
  color: transparent;
}

/* Toggle Switch */
.toggle_button {
  position: relative;
  display: inline-block;
  width: auto;
  width: 30px;
  height: 15px;
  margin: 0;
  vertical-align: top;
  background-color: transparent;
  border: 1px solid #fff;
  border-radius: 50px;
  outline: none;
  cursor: pointer;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.toggle_button::after {
  content: "";

  display: inline-block;
  position: absolute;
  left: 3px;
  top: 24%;

  width: 7px;
  height: 7px;
  background-color: white;
  border-radius: 50%;

  transform: translateX(0);
  transition: 0.3s;
}
.toggle_button:checked::after {
  transform: translateX(calc(100% + 9px));
  background-color: #fff;
}
.toggle_button:checked {
  background-color: transparent;
  transition: all 0.3s cubic-bezier(0.2, 0.85, 0.32, 1.2);
}

/* Custom Select */

.custom_select {
  min-width: 350px;
  position: relative;
}

.custom_select select {
  appearance: none;
  width: 100%;
  font-size: 16px;
  padding-left: 10px;
  padding-bottom: 10px;
  background-color: transparent;
  border-bottom: 1px solid var(--stone750);
  color: white;
  cursor: pointer;
  outline: none;
}

option {
  background-color: var(--indigo950);
  color: white;
}

.custom_select::before,
.custom_select::after {
  --size: 0.3rem;
  content: "";
  position: absolute;
  background-color: transparent;
  right: 1rem;
  pointer-events: none;
}

.custom_select::before {
  border-left: solid transparent;
  border-right: solid transparent;
  border-bottom: 4px solid var(--stone650);
  top: 40%;
}

.custom_select::after {
  border-left: solid transparent;
  border-right: solid transparent;
  border-top: 4px solid var(--stone650);
  top: 55%;
}

/* The container */
.container {
  display: flex;
  flex-direction: row;
  align-items: center;
  position: relative;
  cursor: pointer;
  font-size: 22px;
  padding-top: 2.4vw;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  color: white;
}

/* Hide the browser's default radio button */
.container input {
  position: absolute;
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmark {
  position: absolute;
  top: 5vw;
  right: 0;
  height: 14px;
  width: 14px;
  background-color: transparent;
  border: 1px solid white;
  border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the radio button is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: transparent;
  border: 1px solid white;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.container .checkmark:after {
  top: 2px;
  left: 2px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: white;
}

input[type="file"] {
  opacity: 0;
  top: -40px;
  cursor: pointer;
  width: 200px;
  height: 30px;
  font-size: 0;
  position: absolute;
}
